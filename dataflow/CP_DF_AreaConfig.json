{
	"name": "CP_DF_AreaConfig",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "Source"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "Lookuptable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "lkp"
				},
				{
					"name": "CheckColumnChanges"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Business_Unit_ID as integer,",
				"          Business_Unit as string,",
				"          Block_ID as string,",
				"          Area_Classification_1 as string,",
				"          Area_Classification_2 as string,",
				"          Plant_ID as string,",
				"          Plant_ID2 as string,",
				"          Asset_Owner as string,",
				"          Cost_Center as string,",
				"          Tier_Classification as string,",
				"          Comments as string,",
				"          Business_Justification as string,",
				"          Attachments as string,",
				"          Status as string,",
				"          Field_Engineer as string,",
				"          Field_Engineer_Remarks as string,",
				"          Approver_1_Name as string,",
				"          Approver_1_Remarks as string,",
				"          Approver_1_Timestamp as timestamp,",
				"          Approver_2_Name as string,",
				"          Approver_2_Remarks as string,",
				"          Approver_2_Timestamp as timestamp,",
				"          Created_By as string,",
				"          Created_Timestamp as timestamp,",
				"          Updated_By as string,",
				"          Updated_Timestamp as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Source",
				"source(output(",
				"          Business_Unit as string,",
				"          Block_ID as string,",
				"          Area_Classification_1 as string,",
				"          Area_Classification_2 as string,",
				"          Plant_ID as string,",
				"          Plant_ID2 as string,",
				"          Asset_Owner as string,",
				"          Cost_Center as string,",
				"          Tier_Classification as string,",
				"          Comments as string,",
				"          Business_Justification as string,",
				"          Attachments as string,",
				"          Begin_Date as date,",
				"          End_Date as date,",
				"          Current_Rec_In as integer,",
				"          Field_Engineer_Name as string,",
				"          Field_Engineer_Remarks as string,",
				"          Approver_1_Name as string,",
				"          Approver_1_Remarks as string,",
				"          Approver_1_Timestamp as timestamp,",
				"          Approver_2_Name as string,",
				"          Approver_2_Remarks as string,",
				"          Approver_2_Timestamp as timestamp,",
				"          Created_By as string,",
				"          Created_Timestamp as timestamp,",
				"          Updated_By as string,",
				"          Updated_Timestamp as timestamp,",
				"          Business_Unit_ID as integer,",
				"          Business_Unit_Key as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Lookuptable",
				"Source, Lookuptable lookup(Source@Business_Unit_ID == Lookuptable@Business_Unit_ID",
				"     && Source@Business_Unit == Lookuptable@Business_Unit",
				"     && Source@Block_ID == Lookuptable@Block_ID",
				"     && Source@Area_Classification_1 == Lookuptable@Area_Classification_1",
				"     && Source@Area_Classification_2 == Lookuptable@Area_Classification_2",
				"     && Source@Plant_ID == Lookuptable@Plant_ID",
				"     && Source@Plant_ID2 == Lookuptable@Plant_ID2",
				"     && Source@Asset_Owner == Lookuptable@Asset_Owner",
				"     && Source@Cost_Center == Lookuptable@Cost_Center,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lkp",
				"lkp alterRow(insertIf(isNull(Lookuptable@Business_Unit_ID) ||  (     Source@Business_Unit_ID != Lookuptable@Business_Unit_ID &&     (         Source@Business_Unit != Lookuptable@Business_Unit ||         Source@Block_ID != Lookuptable@Block_ID ||         Source@Area_Classification_1 != Lookuptable@Area_Classification_1 ||         Source@Area_Classification_2 != Lookuptable@Area_Classification_2 ||         Source@Plant_ID != Lookuptable@Plant_ID ||         Source@Plant_ID2 != Lookuptable@Plant_ID2 ||         Source@Asset_Owner != Lookuptable@Asset_Owner ||         Source@Cost_Center != Lookuptable@Cost_Center     ) ))) ~> CheckColumnChanges",
				"CheckColumnChanges sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Business_Unit as string,",
				"          Block_ID as string,",
				"          Area_Classification_1 as string,",
				"          Area_Classification_2 as string,",
				"          Plant_ID as string,",
				"          Plant_ID2 as string,",
				"          Asset_Owner as string,",
				"          Cost_Center as string,",
				"          Tier_Classification as string,",
				"          Comments as string,",
				"          Business_Justification as string,",
				"          Attachments as string,",
				"          Begin_Date as date,",
				"          End_Date as date,",
				"          Current_Rec_In as integer,",
				"          Field_Engineer_Name as string,",
				"          Field_Engineer_Remarks as string,",
				"          Approver_1_Name as string,",
				"          Approver_1_Remarks as string,",
				"          Approver_1_Timestamp as timestamp,",
				"          Approver_2_Name as string,",
				"          Approver_2_Remarks as string,",
				"          Approver_2_Timestamp as timestamp,",
				"          Created_By as string,",
				"          Created_Timestamp as timestamp,",
				"          Updated_By as string,",
				"          Updated_Timestamp as timestamp,",
				"          Business_Unit_ID as integer,",
				"          Business_Unit_Key as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['Business_Unit_ID'],",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Business_Unit = Source@Business_Unit,",
				"          Block_ID = Source@Block_ID,",
				"          Area_Classification_1 = Source@Area_Classification_1,",
				"          Area_Classification_2 = Source@Area_Classification_2,",
				"          Plant_ID = Source@Plant_ID,",
				"          Plant_ID2 = Source@Plant_ID2,",
				"          Asset_Owner = Source@Asset_Owner,",
				"          Cost_Center = Source@Cost_Center,",
				"          Tier_Classification = Source@Tier_Classification,",
				"          Comments = Source@Comments,",
				"          Business_Justification = Source@Business_Justification,",
				"          Attachments = Source@Attachments,",
				"          Business_Unit_ID = Source@Business_Unit_ID",
				"     )) ~> sink"
			]
		}
	}
}